# GPU-Optimized Dockerfile for HFT Aster Trader
# Optimized for NVIDIA L4 GPU (GCP) and RTX 5070Ti (local)
# Multi-stage build for maximum performance and minimal size
# Target: <10ms total latency, <2ms inference

# Base stage with CUDA 12.4 support
FROM nvidia/cuda:12.4.0-runtime-ubuntu22.04 AS base

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.12 \
    python3.12-pip \
    python3.12-dev \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    libffi-dev \
    libssl-dev \
    libbz2-dev \
    liblzma-dev \
    libsqlite3-dev \
    libreadline-dev \
    libncurses5-dev \
    libgdbm-dev \
    libnss3-dev \
    libatk-bridge2.0-dev \
    libdrm2 \
    libxkbcommon-dev \
    libxcomposite-dev \
    libxdamage-dev \
    libxrandr-dev \
    libgbm-dev \
    libxss-dev \
    libasound2-dev \
    libgtk-3-dev \
    libx11-xcb-dev \
    libxcb-dri3-dev \
    libxcb-shm-dev \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.12 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1
RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

# Install Python dependencies
COPY requirements-gpu.txt /tmp/requirements-gpu.txt
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /tmp/requirements-gpu.txt

# Development stage with debugging tools
FROM base AS development

# Install development tools
RUN pip install --no-cache-dir \
    jupyter \
    jupyterlab \
    ipykernel \
    matplotlib \
    seaborn \
    plotly \
    bokeh \
    streamlit \
    pytest \
    pytest-asyncio \
    pytest-cov \
    black \
    isort \
    mypy \
    pre-commit

# Production stage (smaller, optimized)
FROM base AS production

# Copy application code
WORKDIR /app
COPY . /app

# Create non-root user for security
RUN useradd -m -s /bin/bash ai_trader && \
    chown -R ai_trader:ai_trader /app

USER ai_trader

# Set up Python path
ENV PYTHONPATH=/app:$PYTHONPATH

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import torch; print('CUDA available:', torch.cuda.is_available())" || exit 1

# Expose ports
EXPOSE 8080 9090

# Default command for HFT trading
CMD ["python", "run_adaptive_trader.py", "--balance", "50"]

# Multi-stage build targets
FROM development AS dev
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]

FROM production AS prod
ENTRYPOINT ["python", "run_adaptive_trader.py"]
