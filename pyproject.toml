[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rari-trade"
version = "0.1.0"
description = "Enterprise-grade AI trading platform powered by ensemble models and advanced risk management"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "torch>=2.0.0",
    "ccxt>=4.0.0",
    "aiohttp>=3.8.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "ta>=0.10.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.23.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "pre-commit>=3.4.0",
    "safety>=2.3.0",
    "requests>=2.31.0",
    "textblob>=0.17.0",
    "yfinance>=0.2.0",
    "ta-lib>=0.4.0",
]

[project.optional-dependencies]
gpu = [
    "torch[cuda]>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "cupy>=12.0.0",
    "tensorrt>=8.6.0",
]
rl = [
    "stable-baselines3>=2.0.0",
    "gymnasium>=0.29.0",
    "ray[rllib]>=2.6.0",
    "wandb>=0.15.0",
]
dev = [
    "jupyterlab>=4.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.23.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "pandas-profiling>=3.6.0",
    "sweetviz>=2.1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/rari-trade"
Repository = "https://github.com/yourusername/rari-trade"
Documentation = "https://rari-trade.readthedocs.io/"
Issues = "https://github.com/yourusername/rari-trade/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mcp_trader*"]

[tool.setuptools.package-data]
"mcp_trader" = ["config/*.json", "config/*.yaml"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | rari_trade_env
  | rari_trade_env_fresh
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["mcp_trader"]
skip = ["rari_trade_env", "rari_trade_env_fresh", "__pycache__"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "rari_trade_env",
    "rari_trade_env_fresh",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "ta.*",
    "yfinance.*",
    "textblob.*",
    "ray.*",
    "wandb.*",
    "cupy.*",
    "tensorrt.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "rari_trade_env", "rari_trade_env_fresh"]
skips = ["B101", "B601"]  # Skip assert checks and shell usage

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra -q --strict-markers --strict-config --cov=mcp_trader --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "gpu: GPU-dependent tests",
    "network: Network-dependent tests",
]

[tool.coverage.run]
source = ["mcp_trader"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/rari_trade_env/*",
    "*/rari_trade_env_fresh/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
