# RTX 5070 Ti Enhanced Dashboard Dockerfile
# Optimized for production deployment with GPU acceleration

FROM nvidia/cuda:12.0-devel-ubuntu22.04

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    CUDA_VISIBLE_DEVICES=0 \
    CUDA_MPS_PIPE_DIRECTORY=/tmp \
    CUDA_MPS_LOG_DIRECTORY=/tmp \
    PORT=8080

# Install Python and pip
RUN apt-get update && apt-get install -y python3.11 python3.11-pip python3.11-dev && \
    rm -rf /var/lib/apt/lists/*

# Upgrade pip
RUN python3.11 -m pip install --upgrade pip

# Copy requirements first for better Docker layer caching
COPY requirements.txt .
COPY requirements-gpu.txt . 2>/dev/null || echo "# GPU requirements not found" > requirements-gpu.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    if [ -f requirements-gpu.txt ]; then pip install --no-cache-dir -r requirements-gpu.txt; fi

# Copy application code
COPY . .

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app && \
    chown -R app:app /app
USER app

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["streamlit", "run", "dashboard/app.py", "--server.port=8080", "--server.address=0.0.0.0", "--server.headless=true"]
